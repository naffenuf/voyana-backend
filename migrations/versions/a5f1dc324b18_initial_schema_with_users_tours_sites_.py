"""Initial schema with users, tours, sites, and relationships

Revision ID: a5f1dc324b18
Revises: 
Create Date: 2025-10-23 16:01:18.615843

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a5f1dc324b18'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audio_cache',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('text_hash', sa.String(length=64), nullable=False),
    sa.Column('text_content', sa.Text(), nullable=False),
    sa.Column('audio_url', sa.String(length=1024), nullable=False),
    sa.Column('voice_id', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=False),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audio_cache', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audio_cache_text_hash'), ['text_hash'], unique=True)

    op.create_table('neighborhood_descriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('neighborhood', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('city', 'neighborhood', name='unique_city_neighborhood')
    )
    op.create_table('sites',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('user_submitted_locations', postgresql.ARRAY(sa.Float(), dimensions=2), nullable=True),
    sa.Column('image_url', sa.String(length=1024), nullable=True),
    sa.Column('audio_url', sa.String(length=1024), nullable=True),
    sa.Column('web_url', sa.String(length=1024), nullable=True),
    sa.Column('keywords', postgresql.ARRAY(sa.String(length=50)), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('place_id', sa.String(length=255), nullable=True),
    sa.Column('formatted_address', sa.Text(), nullable=True),
    sa.Column('types', postgresql.ARRAY(sa.String(length=50)), nullable=True),
    sa.Column('user_ratings_total', sa.Integer(), nullable=True),
    sa.Column('phone_number', sa.Text(), nullable=True),
    sa.Column('google_photo_references', postgresql.ARRAY(sa.String(length=1024)), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sites', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sites_place_id'), ['place_id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('google_id', sa.String(length=255), nullable=True),
    sa.Column('apple_id', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('apple_id'),
    sa.UniqueConstraint('google_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_api_keys_key'), ['key'], unique=True)

    op.create_table('password_reset_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=64), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('password_reset_tokens', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_password_reset_tokens_token'), ['token'], unique=True)

    op.create_table('tours',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('neighborhood', sa.String(length=100), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('image_url', sa.String(length=1024), nullable=True),
    sa.Column('audio_url', sa.String(length=1024), nullable=True),
    sa.Column('map_image_url', sa.String(length=1024), nullable=True),
    sa.Column('music_urls', postgresql.ARRAY(sa.String(length=1024)), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('distance_meters', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tour_id', sa.UUID(), nullable=True),
    sa.Column('site_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('feedback_type', sa.String(length=50), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tour_id'], ['tours.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tour_sites',
    sa.Column('tour_id', sa.UUID(), nullable=False),
    sa.Column('site_id', sa.UUID(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('visit_duration_minutes', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tour_id'], ['tours.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tour_id', 'site_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tour_sites')
    op.drop_table('feedback')
    op.drop_table('tours')
    with op.batch_alter_table('password_reset_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_password_reset_tokens_token'))

    op.drop_table('password_reset_tokens')
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_api_keys_key'))

    op.drop_table('api_keys')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('sites', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sites_place_id'))

    op.drop_table('sites')
    op.drop_table('neighborhood_descriptions')
    with op.batch_alter_table('audio_cache', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audio_cache_text_hash'))

    op.drop_table('audio_cache')
    # ### end Alembic commands ###
